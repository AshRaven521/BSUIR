//---------------------------------------------------------------------------


#pragma hdrstop

#include "Unit5.h"
#include "Unit1.h"

#include <math.h>
#include <vcl.h>

   //MyRectangle::MyRectangle(): Polygon(70,70,100,100)

   double MyRectangle::calc_square()
	 {
		double s = AB * BC;

		return s;
	 }

   double MyRectangle::calc_perimetr()
	 {
		 double p=(AB + BC) * 2;

		 return p;
	 }

   void MyRectangle::mass_centre(int &x0,int &y0)
	 {
		  x0=AB/2;
		  y0=BC/2;
	 }

   void MyRectangle::show(TCanvas *Canvas)
	 {
	   Canvas -> Pen -> Color=clYellow;
	   Canvas -> Brush ->Color=clYellow;
	   Canvas -> Rectangle(x-AB,y-BC,x+AB,y+BC);
	 }

   void MyRectangle::move_mass_centre(int x0,int y0)
	 {
		 x=x0;
		 y=y0;
	 }

   void MyRectangle::hide(TCanvas *Canvas)
	 {
	   Canvas -> Pen -> Color=clWhite;
	   Canvas -> Brush -> Color=clWhite;
	   Canvas -> Rectangle(x-AB,y-BC,x+AB,y+BC);
	 }

   void MyRectangle::move()
	 {
		 x+=5;
		 y+=3;
	 }

   void MyRectangle::reset()
	 {
		 x=0;
		 y=0;
	 }

   void MyRectangle::mashtab(int multiplcoef)
	 {
		 AB=AB*multiplcoef;
		 BC=BC*multiplcoef;
	 }

   void MyRectangle::change_parametrs(int M,int N)
	 {
		 AB=M;
		 BC=N;
	 }

   void MyRectangle::rotate(TCanvas *Canvas,float a)
	 {
		 int x1,y1,x2,y2,x3,y3,x4,y4;

		 x1=x-AB/2;
		 x2=x+AB/2;
		 y1=y-BC/2;
		 y2=y+BC/2;

		 //поворот с помощью матрицы поворота
		 /*x1=((x1 - x) * cos(a) - (y1 - y) * sin(a)) + x;
		 y1=((x1 - x) * sin(a) + (y1 - y) * cos(a)) + y;

		 x2 = ((x2 - x) * cos(a) - (y2 - y) * sin(a)) + x;
		 y2 = y1;

		 x3=x2;
		 y3=((x2 - x) * sin(a) + (y2 - y) * cos(a)) + y;

		 x4=x1;
		 y4=y3;

		 Canvas -> Pen -> Color=clYellow;
		 Canvas -> Brush -> Color=clYellow;

		 Canvas->MoveTo(x1,y1);
		 Canvas->LineTo(x2, y2);
		 Canvas->MoveTo(x2,y2);
		 Canvas->LineTo(x3,y3);
		 Canvas->MoveTo(x3,y3);
		 Canvas->LineTo(x4,y4);
		 Canvas->MoveTo(x4,y4);
		 Canvas->LineTo(x1,y1);*/

		 Canvas -> Pen -> Color=clYellow;
		 Canvas -> Brush -> Color=clYellow;
		 x1=((x1 - x) * cos(a) - (y1 - y) * sin(a)) + x;
		 y1=((x1 - x) * sin(a) + (y1 - y) * cos(a)) + y;
		 x2 = ((x2 - x) * cos(a) + (y2 - y) * sin(a)) + x;
		 y2=((-1) * (x2 - x) * sin(a) + (y2 - y) * cos(a)) + y;
		 Canvas -> Rectangle(x1,y1,x2,y2);
	 }
//---------------------------------------------------------------------------

#pragma package(smart_init)
